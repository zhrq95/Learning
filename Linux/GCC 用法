gcc 是 GNU 推出的基于 C/C++ 的编译器，GCC 可以用来编译 C/C++、FORTRAN、JAVA、OBJC、ADA、Pascal 等语言的程序，可根据需要选择安装支持的语言。可产生基于多种处理器（x86、ARM、PowerPC等）的目标代码。

语法：
gcc [选项] 目标文件 源文件

可选选项：
-o：指定生成的输出文件；
-E：仅执行编译预处理；
-S：将C代码转换为汇编代码；
-wall：显示警告信息；
-c：仅执行编译操作，不进行连接操作。

例：

将 test.c 预处理、汇编、编译并链接形成可执行文件。这里未指定输出文件，默认输出为 a.out：
gcc test.c

将 test.c 预处理、汇编、编译并链接形成可执行文件 test。
-o 选项用来指定输出文件的文件名：
gcc test.c -o test

将 test.c 预处理输出 test.i 文件：
gcc -E test.c -o test.i 

将预处理输出文件test.i汇编成 test.s 文件: 
gcc -S test.i 

将汇编输出文件 test.s 编译输出 test.o 文件:
gcc -c test.s 

将编译输出文件 test.o 链接成最终可执行文件 test：
gcc test.o -o test 

使用编译优化级别1编译程序。级别为1~3，级别越大优化效果越好，但编译时间越长：
gcc -O1 test.c -o test 

如果有多个源文件，有两种编译方法：
假设有两个源文件为 test.c 和 testfun.c 
1、多个文件一起编译：
gcc testfun.c test.c -o test
将 testfun.c 和 test.c 分别编译后链接成 test 可执行文件。
2、分别编译各个源文件，之后对编译后输出的目标文件链接。
gcc -c testfun.c  #将 testfun.c 编译成 testfun.o 
gcc -c test.c  #将 test.c 编译成 test.o
gcc -o testfun.o test.o -o test  #将 testfun.o 和 test.o 链接成 test
