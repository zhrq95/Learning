操作系统专门在内存里开一个区域来存放代码指令（代码段），每一个函数，都有一个代码段。程序运行时代码段是只读的。
CPU 根据一个指令指针来取当前指令，执行完后，
指令指针移动到下一条指令（顺序执行），或跳转到指定的指令（条件、循环）
要点：
1、每个函数是一个独立的代码片段，在代码段中；
2、有一个指令指针，来决定当前 CPU 执行的指令。

return 语句的两个功能：
1、将指令指针拨回到调用函数的下一条指令；
2、保存返回值到一个特定的地方。

函数运行时的参数和局部变量的内存分配是放在栈上的，操作系统也将内存开一个段出来做运行时栈的使用。
栈有一个栈顶指针，用来表示现在栈上的最后一个元素，
定义一个局部变量或参数，会将栈顶指针往下移动，分配出变量所需要的内存。

调用函数，分为四个部分：
1、分配参数的内存（函数有多个参数时，从右边的参数往左分配）；
2、将参数对应的内存做好数据初始化；
3、将下一条指令的位置保存在栈里；
4、保存栈顶在调用函数之前的位置。

return 指令：
1、回收这个函数里面的局部变量，将栈顶拨回到我们没有调用函数前的地方；
2、保存返回值到一个地方（如 EAX 寄存器等）；
3、将指令指针，拨回保存的下一条语句要执行的地方。
