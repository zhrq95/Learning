问题空间（problem space）：
是问题解决者对一个问题所达到的全部认识状态，它是由问题解决者利用问题所包含的信息和已贮存的信息主动地构成的。一般由3下面三个方面来定义：
初始状态：开始时的不完全的信息或令人不满意的状况；
目标状态：你希望获得的信息或状态；
操作：为了从初始状态迈向目标状态，你可能采取的步骤。

对象（object）：
一个对象有自己的状态、行为和唯一的标识；
所有相同类型的对象所具有的结构和行为在他们共同的类中被定义。
状态（state）：
包括这个对象已有的属性（通常是类里面已经定义好的）在加上对象具有的当前属性值（这些属性往往是动态的）
行为（behavior）：
个对象如何影响外界及被外界影响，表现为对象自身状态的改变和信息的传递。
标识（identity）：
一个对象所具有的区别于所有其它对象的属性。（本质上指内存中所创建的对象的地址）

面向对象程序设计（Object-oriented programming，缩写：OOP）：
是一种程序设计范型，同时也是一种程序开发的方法。对象指的是类的实例。它将对象作为程序的基本单元，将程序和数据封装其中，以提高软件的重用性、灵活性和扩展性。面向对象的一个关键性观念是将数据以及对数据的操作封装在一起，组成一个相互依赖，不可分割的整体，即对象，不同对象之间通过消息机制来通信或同步。

类（class）：
是一种面向对象计算机编程语言的构造，是创建对象的蓝图，描述了所创建的对象共同的属性和方法。主要针对大型软件设计而提出，使得软件设计更加灵活，能够很好地支持代码复用和设计复用，代码具有更好的可读性和扩展性。

python 中一切内容都可以称为对象
类从成员：数据成员 + 成员方法。
数据成员：创建类时用变量形式表示对象特征的成员。
成员方法：创建类时用函数形式表示对象行为的成员。
