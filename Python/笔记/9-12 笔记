divmod(x,y)：返回 x 除以 y 后的商和余数
>>> divmod(5,2) # 表示 5 除以 2
(2, 1)
>>> divmod(9,2)
(4, 1)
>>> divmod(5.0,2)
(2.0, 1.0)

dir(module)：可以通过它查看任何模块中所包含的工具。

help(math.pow)：查看帮助

r"c:\news" ，由 r 开头引起的字符串，就是原始字符串，在里面放任何字符都表示该字符的原始含义。
这种方法在做网站设置网站目录结构的时候非常有用。使用了原始字符串，就不需要转义了。

通过索引找到该索引所对应的字符：
>>> lang = "study Python"
>>> lang[0]
's'
>>> lang[1]
't'
>>> "study Python"[0]
's'
反过来，通过字符找到其在字符串中的索引值：
>>> lang.index("p")
6
不管是得到一个还是多个，通过索引得到字符的过程，称之为切片。
>>> lang
'study Python'
>>> b = lang[1:] # 得到从 1 号到最末尾的字符，这时最后那个需要不用写
>>> b
'tudy Python'
>>> c = lang[:] # 得到所有字符
>>> c
'study Python'
>>> d = lang[:10] # 得到从第一个到 10 号之前的字符
>>> d
'study pyth'
注：用 c=lang[:] 的方式，并没有生成一个新的字符串，而是将变量 c 这个标签也贴在了原来那个字符串上了。

去掉字符串两头的空格：
• S.strip() 去掉字符串的左右空格
• S.lstrip() 去掉字符串的左边空格
• S.rstrip() 去掉字符串的右边空格
如：
>>> b=" hello " # 两边有空格
>>> b.strip()
'hello'
>>> b
' hello '
注：原来的值没有变化，而是新返回了一个结果。
>>> b.lstrip() # 去掉左边的空格
'hello '
>>> b.rstrip() # 去掉右边的空格
' hello'

>>> lang
'python'
>>> lang[-1:-3]
''
>>> lang[-3:-1]
'ho'
切片的时候一定要左边的数字小于右边的数字, lang[-1:-3] 没有遵守这个规则,返回的是一个空。


反转
对于列表：
>>> alst = [1,2,3,4,5,6]
>>> alst[::-1]
[6, 5, 4, 3, 2, 1]
>>> alst
[1, 2, 3, 4, 5, 6]
对于字符串也可以：
>>> lang
'python'
>>> lang[::-1]
'nohtyp'
>>> lang
'python'
